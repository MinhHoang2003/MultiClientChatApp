/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view;

import client.model.RoomClientSide;
import java.awt.Color;
import java.awt.Component;
import javax.swing.ImageIcon;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import server.model.RoomStatus;

/**
 *
 * @author hoang
 */
public class RoomRenderer extends javax.swing.JPanel implements ListCellRenderer<RoomClientSide> {

    /**
     * Creates new form Rooms
     */
    public RoomRenderer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomName = new javax.swing.JLabel();
        roomStatus = new javax.swing.JLabel();

        roomName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        roomName.setText("RoomName");

        roomStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/lock24px.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(roomName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addComponent(roomStatus)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(roomName))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel roomName;
    private javax.swing.JLabel roomStatus;
    // End of variables declaration//GEN-END:variables

    @Override
    public Component getListCellRendererComponent(JList<? extends RoomClientSide> list, RoomClientSide value, int index, boolean isSelected, boolean cellHasFocus) {
        if (value.getRoomStatus() == RoomStatus.PRIVATE) {
            roomStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/lock24px.png")));
        } else {
            roomStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/asset/unlock24px.png")));
        }
        roomName.setText(value.getName());
        roomName.setForeground(Color.BLACK);

        // set Opaque to change background color of JLabel
        roomName.setOpaque(true);
        roomStatus.setOpaque(true);

        // when select item
        if (isSelected) {
            roomName.setBackground(list.getSelectionBackground());
            roomStatus.setBackground(list.getSelectionBackground());
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
        } else { // when don't select
            roomName.setBackground(list.getBackground());
            roomStatus.setBackground(list.getBackground());
            setBackground(list.getBackground());
            setForeground(list.getForeground());
        }
        setEnabled(true);
        return this;
    }
}
